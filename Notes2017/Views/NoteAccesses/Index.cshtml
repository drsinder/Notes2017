@*/*--------------------------------------------------------------------------
    **
    **  Copyright (c) 2017, Dale Sinder
    **
    **  Name: Index.cshtml
    **
    **  Description:
    **      Index of NotesFile Access List
    **
    **  This program is free software: you can redistribute it and/or modify
    **  it under the terms of the GNU General Public License version 3 as
    **  published by the Free Software Foundation.
    **
    **  This program is distributed in the hope that it will be useful,
    **  but WITHOUT ANY WARRANTY; without even the implied warranty of
    **  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    **  GNU General Public License version 3 for more details.
    **
    **  You should have received a copy of the GNU General Public License
    **  version 3 along with this program in file "license-gpl-3.0.txt".
    **  If not, see <http://www.gnu.org/licenses/gpl-3.0.txt>.
    **
    **--------------------------------------------------------------------------
    */*@

@model IEnumerable<NoteAccess>

@{
    ViewBag.Title = "Access List ";
    NoteAccess myaccess = ViewBag.MyAccess;
    List<string> ds = (List<string>)(ViewBag.IDs); // 2 long
}

<h2>Access List for @ViewBag.NoteFileName</h2>
<p>
    @if (myaccess.EditAccess) {@Html.ActionLink("Add", "Create", new { id = ViewBag.NoteFileID })}
</p>
<table class="table">
    <tr>
        <th>User Name</th>
        <th>
            @Html.DisplayNameFor(model => model.Read)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Respond)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Write)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SetTag)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DeleteEdit)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Director)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EditAccess)
        </th>
        <th></th>
    </tr>

@{ 
    int cnt = 0;
    foreach (var item in Model)
    {
    <tr>
        @{
            string myname = ViewBag.names[cnt++];
        <td>
            @myname
        </td>

        <td>
            @Html.DisplayFor(modelItem => item.Read)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Respond)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Write)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SetTag)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DeleteEdit)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Director)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EditAccess)
        </td>
        <td>
            @if (myaccess.EditAccess)
            {@Html.ActionLink("Edit", "Edit", new { id = item.UserID, id2 = item.NoteFileID }) 
                if (string.Compare(ds[0], item.UserID) != 0 && string.Compare(ds[1], item.UserID) != 0)
                { <span>|</span> @Html.ActionLink("Delete", "Delete", new { id = item.UserID, id2 = item.NoteFileID }) }
            }
        </td>
        }
    </tr>
                }

            }

</table>
@Html.ActionLink("Back to file", "Index", "NoteDisplay", new { id = @ViewBag.NoteFileID }, null)


